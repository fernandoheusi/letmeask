{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferna\\\\Documents\\\\HTML\\\\NLW\\\\Aulas\\\\letmeask\\\\src\\\\pages\\\\AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport deleteImg from \"../assets/images/delete.svg\";\nimport checkImg from \"../assets/images/check.svg\";\nimport answerImg from \"../assets/images/answer.svg\";\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Question';\nimport { RoomCode } from '../components/roomCode'; // import { useAuth } from '../hooks/useAuth';\n\nimport { useRoom } from '../hooks/useRoom';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  // const {user} = useAuth();\n  const history = useHistory();\n  const params = useParams();\n  const roomId = params.id;\n  const {\n    questions,\n    title\n  } = useRoom(roomId);\n  console.log(questions);\n\n  async function handleEndRoom() {\n    await database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date()\n    });\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion(questionId) {\n    if (window.confirm('Tem certeza que deseja excluir essa pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isAnswered: true\n    });\n  }\n\n  async function handleHighLightQuestion(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isHighlighted: true\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutlined: true,\n            onClick: handleEndRoom,\n            children: \"Encerrar Sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" peguntas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleCheckQuestionAsAnswered(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: checkImg,\n                alt: \"Marcar pergunta como respondida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleHighLightQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: answerImg,\n                alt: \"Dar destaque \\xE0 pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deleteImg,\n                alt: \"Remover pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AdminRoom, \"utbXpen43cQZ35vexK1G+6gMIuc=\", false, function () {\n  return [useHistory, useParams, useRoom];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["C:/Users/ferna/Documents/HTML/NLW/Aulas/letmeask/src/pages/AdminRoom.tsx"],"names":["useHistory","useParams","Button","Question","RoomCode","useRoom","database","AdminRoom","history","params","roomId","id","questions","title","console","log","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","isAnswered","handleHighLightQuestion","isHighlighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg"],"mappings":"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","sourcesContent":["import {useHistory, useParams} from 'react-router-dom';\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport deleteImg from '../assets/images/delete.svg'\r\n\r\nimport checkImg from '../assets/images/check.svg';\r\nimport answerImg from '../assets/images/answer.svg';\r\nimport { Button } from '../components/Button';\r\nimport { Question } from '../components/Question';\r\nimport { RoomCode } from '../components/roomCode';\r\n// import { useAuth } from '../hooks/useAuth';\r\nimport { useRoom } from '../hooks/useRoom';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/room.scss'\r\n\r\ntype RoomParams = {\r\n\tid: string;\r\n}\r\n\r\nexport function AdminRoom(){\r\n\t// const {user} = useAuth();\r\n\tconst history = useHistory()\r\n\tconst params = useParams<RoomParams>();\r\n\tconst roomId = params.id;\r\n\r\n\tconst {questions,title} = useRoom(roomId);\r\n\r\n\tconsole.log(questions);\r\n\r\n\tasync function handleEndRoom() {\r\n\t\tawait database.ref(`rooms/${roomId}`).update({\r\n\t\t\tendedAt: new Date(),\r\n\t\t})\r\n\r\n\t\thistory.push('/');\r\n\t}\r\n\r\n\tasync function handleDeleteQuestion(questionId: string){\r\n\t\tif (window.confirm('Tem certeza que deseja excluir essa pergunta?')) {\r\n\t\t\tawait database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\r\n\t\t}\r\n\t}\r\n\r\n\tasync function handleCheckQuestionAsAnswered(questionId: string){\r\n\t\t\tawait database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n\t\t\t\tisAnswered: true,\r\n\t\t\t});\r\n\t}\r\n\r\n\tasync function handleHighLightQuestion(questionId: string){\r\n\t\t\tawait database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n\t\t\t\tisHighlighted: true,\r\n\t\t\t});\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div id=\"page-room\">\r\n\t\t\t<header>\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<img src={logoImg} alt=\"Letmeask\" />\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<RoomCode code={roomId}/>\r\n\t\t\t\t\t\t<Button isOutlined onClick={handleEndRoom}>Encerrar Sala</ Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<main >\r\n\t\t\t\t<div className=\"room-title\">\r\n\t\t\t\t\t<h1>Sala {title}</h1>\r\n\t\t\t\t\t{ questions.length > 0 && <span>{questions.length} peguntas</span>}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"question-list\">\r\n\t\t\t\t\t{questions.map( question => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Question \r\n\t\t\t\t\t\t\tkey={question.id}\r\n\t\t\t\t\t\t\tcontent={question.content}\r\n\t\t\t\t\t\t\tauthor={question.author}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tonClick={()=> handleCheckQuestionAsAnswered(question.id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img src={checkImg} alt=\"Marcar pergunta como respondida\" />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tonClick={()=> handleHighLightQuestion(question.id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img src={answerImg} alt=\"Dar destaque à pergunta\" />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tonClick={()=>handleDeleteQuestion(question.id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img src={deleteImg} alt=\"Remover pergunta\" />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Question>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}"]},"metadata":{},"sourceType":"module"}