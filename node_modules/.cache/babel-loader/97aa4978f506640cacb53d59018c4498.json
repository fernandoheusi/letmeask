{"ast":null,"code":"import _slicedToArray from\"C:/Users/ferna/Documents/HTML/NLW/Aulas/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{database}from\"../services/firebase\";import{useAuth}from\"./useAuth\";export function useRoom(roomId){var _useAuth=useAuth(),user=_useAuth.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];useEffect(function(){var roomRef=database.ref(\"rooms/\".concat(roomId));roomRef.on('value',function(room){var _databaseRoom$questio;var databaseRoom=room.val();var firebaseQuestions=(_databaseRoom$questio=databaseRoom.questions)!==null&&_databaseRoom$questio!==void 0?_databaseRoom$questio:{};var parsedQuestions=Object.entries(firebaseQuestions).map(function(_ref){var _value$likes,_Object$entries$find,_value$likes2;var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return{id:key,content:value.content,author:value.author,isHighlighted:value.isHighlighted,isAnswered:value.isAnswered,likeCount:Object.values((_value$likes=value.likes)!==null&&_value$likes!==void 0?_value$likes:{}).length,likeId:(_Object$entries$find=Object.entries((_value$likes2=value.likes)!==null&&_value$likes2!==void 0?_value$likes2:{}).find(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],like=_ref4[1];return like.authorId===(user===null||user===void 0?void 0:user.id);}))===null||_Object$entries$find===void 0?void 0:_Object$entries$find[0]};});setTitle(databaseRoom.title);setQuestions(parsedQuestions);});return function(){roomRef.off('value');};},[roomId,user===null||user===void 0?void 0:user.id]);return{questions:questions,title:title};}","map":{"version":3,"sources":["C:/Users/ferna/Documents/HTML/NLW/Aulas/letmeask/src/hooks/useRoom.tsx"],"names":["useEffect","useState","database","useAuth","useRoom","roomId","user","questions","setQuestions","title","setTitle","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestions","Object","entries","map","key","value","id","content","author","isHighlighted","isAnswered","likeCount","values","likes","length","likeId","find","like","authorId","off"],"mappings":"uKAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,OAASC,OAAT,KAAwB,WAAxB,CA4BA,MAAO,SAASC,CAAAA,OAAT,CAAiBC,MAAjB,CAAgC,cACrBF,OAAO,EADc,CAC9BG,IAD8B,UAC9BA,IAD8B,eAELL,QAAQ,CAAiB,EAAjB,CAFH,wCAE/BM,SAF+B,eAEpBC,YAFoB,8BAGZP,QAAQ,CAAC,EAAD,CAHI,yCAG/BQ,KAH+B,eAGxBC,QAHwB,eAKtCV,SAAS,CAAC,UAAM,CACf,GAAMW,CAAAA,OAAO,CAAGT,QAAQ,CAACU,GAAT,iBAAsBP,MAAtB,EAAhB,CAEAM,OAAO,CAACE,EAAR,CAAW,OAAX,CAAoB,SAAAC,IAAI,CAAI,2BAC3B,GAAMC,CAAAA,YAAY,CAAGD,IAAI,CAACE,GAAL,EAArB,CACA,GAAMC,CAAAA,iBAAoC,wBAAGF,YAAY,CAACR,SAAhB,+DAA6B,EAAvE,CAEA,GAAMW,CAAAA,eAAe,CAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CAAsC,cAAkB,sFAAhBC,GAAgB,UAAXC,KAAW,UAC/E,MAAO,CACNC,EAAE,CAAEF,GADE,CAENG,OAAO,CAAEF,KAAK,CAACE,OAFT,CAGNC,MAAM,CAAEH,KAAK,CAACG,MAHR,CAINC,aAAa,CAAEJ,KAAK,CAACI,aAJf,CAKNC,UAAU,CAAEL,KAAK,CAACK,UALZ,CAMNC,SAAS,CAAEV,MAAM,CAACW,MAAP,eAAcP,KAAK,CAACQ,KAApB,6CAA6B,EAA7B,EAAiCC,MANtC,CAONC,MAAM,uBAAEd,MAAM,CAACC,OAAP,gBAAeG,KAAK,CAACQ,KAArB,+CAA8B,EAA9B,EAAkCG,IAAlC,CAAuC,kDAAEZ,GAAF,UAAOa,IAAP,gBAAgBA,CAAAA,IAAI,CAACC,QAAL,IAAkB9B,IAAlB,SAAkBA,IAAlB,iBAAkBA,IAAI,CAAEkB,EAAxB,CAAhB,EAAvC,CAAF,+CAAE,qBAAqF,CAArF,CAPF,CAAP,CASA,CAVuB,CAAxB,CAWAd,QAAQ,CAACK,YAAY,CAACN,KAAd,CAAR,CACAD,YAAY,CAACU,eAAD,CAAZ,CACA,CAjBD,EAmBA,MAAO,WAAM,CACZP,OAAO,CAAC0B,GAAR,CAAY,OAAZ,EACA,CAFD,CAGA,CAzBQ,CAyBP,CAAChC,MAAD,CAASC,IAAT,SAASA,IAAT,iBAASA,IAAI,CAAEkB,EAAf,CAzBO,CAAT,CA2BA,MAAO,CAACjB,SAAS,CAATA,SAAD,CAAWE,KAAK,CAALA,KAAX,CAAP,CACA","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { database } from \"../services/firebase\";\r\nimport { useAuth } from \"./useAuth\";\r\n\r\ntype QuestionType ={\r\n\tid: string;\r\n\tauthor: {\r\n\t\tname: string;\r\n\t\tavatar: string;\r\n\t}\r\n\tcontent: string;\r\n\tisAnswered: boolean;\r\n\tisHighlighted: boolean;\r\n\tlikeCount: number;\r\n\tlikeId: string | undefined;\r\n}\r\n\r\ntype FirebaseQuestions = Record<string, {\r\n\tauthor: {\r\n\t\tname: string;\r\n\t\tavatar: string;\r\n\t}\r\n\tcontent: string;\r\n\tisAnswered: boolean;\r\n\tisHighlighted: boolean;\r\n\tlikes: Record<string, {\r\n\t\tauthorId: string;\r\n\t}>\r\n}>\r\n\r\nexport function useRoom(roomId: string){\r\n\tconst { user } = useAuth();\r\n\tconst [questions, setQuestions] =useState<QuestionType[]>([])\r\n\tconst [title, setTitle] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tconst roomRef = database.ref(`rooms/${roomId}`);\r\n\r\n\t\troomRef.on('value', room => {\r\n\t\t\tconst databaseRoom = room.val();\r\n\t\t\tconst firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\r\n\r\n\t\t\tconst parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: key,\r\n\t\t\t\t\tcontent: value.content,\r\n\t\t\t\t\tauthor: value.author,\r\n\t\t\t\t\tisHighlighted: value.isHighlighted,\r\n\t\t\t\t\tisAnswered: value.isAnswered,\r\n\t\t\t\t\tlikeCount: Object.values(value.likes ?? {}).length,\r\n\t\t\t\t\tlikeId: Object.entries(value.likes ?? {}).find(([key, like])=> like.authorId === user?.id)?.[0],\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsetTitle(databaseRoom.title);\r\n\t\t\tsetQuestions(parsedQuestions);\r\n\t\t})\r\n\r\n\t\treturn () => {\r\n\t\t\troomRef.off('value');\r\n\t\t}\r\n\t},[roomId, user?.id]);\r\n\r\n\treturn {questions,title}\r\n}"]},"metadata":{},"sourceType":"module"}