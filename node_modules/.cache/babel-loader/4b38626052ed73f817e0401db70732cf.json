{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ferna/Documents/HTML/NLW/Aulas/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/ferna/Documents/HTML/NLW/Aulas/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/ferna/Documents/HTML/NLW/Aulas/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useEffect,useState}from\"react\";import{auth,firebase}from\"../services/firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/createContext({});export function AuthContextProvider(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];useEffect(function(){var unsubscribe=auth.onAuthStateChanged(function(user){if(user){var displayName=user.displayName,photoURL=user.photoURL,uid=user.uid;if(!displayName||!photoURL){throw new Error('Missing information frmo Google Account.');}setUser({id:uid,name:displayName,avatar:photoURL});}});return function(){unsubscribe();};},[]);function signInWithGoogle(){return _signInWithGoogle.apply(this,arguments);}function _signInWithGoogle(){_signInWithGoogle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,result,_result$user,displayName,photoURL,uid;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new firebase.auth.GoogleAuthProvider();_context.next=3;return auth.signInWithPopup(provider);case 3:result=_context.sent;if(!result.user){_context.next=9;break;}_result$user=result.user,displayName=_result$user.displayName,photoURL=_result$user.photoURL,uid=_result$user.uid;if(!(!displayName||!photoURL)){_context.next=8;break;}throw new Error('Missing information frmo Google Account.');case 8:setUser({id:uid,name:displayName,avatar:photoURL});case 9:case\"end\":return _context.stop();}}},_callee);}));return _signInWithGoogle.apply(this,arguments);}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user:user,signInWithGoogle:signInWithGoogle},children:props.children});}","map":{"version":3,"sources":["C:/Users/ferna/Documents/HTML/NLW/Aulas/letmeask/src/contexts/AuthContext.tsx"],"names":["createContext","useEffect","useState","auth","firebase","AuthContext","AuthContextProvider","props","user","setUser","unsubscribe","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","result","children"],"mappings":"kfAAA,OAASA,aAAT,CAAmCC,SAAnC,CAA8CC,QAA9C,KAA8D,OAA9D,CACA,OAASC,IAAT,CAAeC,QAAf,KAA+B,sBAA/B,C,2CAiBA,MAAO,IAAMC,CAAAA,WAAW,cAAGL,aAAa,CAAC,EAAD,CAAjC,CAEP,MAAO,SAASM,CAAAA,mBAAT,CAA6BC,KAA7B,CAA8D,eAC5CL,QAAQ,EADoC,wCAC5DM,IAD4D,eACtDC,OADsD,eAGnER,SAAS,CAAC,UAAI,CACZ,GAAMS,CAAAA,WAAW,CAAGP,IAAI,CAACQ,kBAAL,CAAwB,SAAAH,IAAI,CAAI,CAClD,GAAGA,IAAH,CAAQ,IACEI,CAAAA,WADF,CACgCJ,IADhC,CACEI,WADF,CACeC,QADf,CACgCL,IADhC,CACeK,QADf,CACyBC,GADzB,CACgCN,IADhC,CACyBM,GADzB,CAGN,GAAG,CAACF,WAAD,EAAgB,CAACC,QAApB,CAA6B,CAC3B,KAAM,IAAIE,CAAAA,KAAJ,CAAU,0CAAV,CAAN,CACD,CAEDN,OAAO,CAAC,CACNO,EAAE,CAAEF,GADE,CAENG,IAAI,CAAEL,WAFA,CAGNM,MAAM,CAAEL,QAHF,CAAD,CAAP,CAMD,CACF,CAfmB,CAApB,CAiBA,MAAO,WAAM,CACXH,WAAW,GACZ,CAFD,CAGD,CArBQ,CAqBP,EArBO,CAAT,CAHmE,QA0BpDS,CAAAA,gBA1BoD,0JA0BnE,6LACQC,QADR,CACmB,GAAIhB,CAAAA,QAAQ,CAACD,IAAT,CAAckB,kBAAlB,EADnB,uBAGuBlB,CAAAA,IAAI,CAACmB,eAAL,CAAqBF,QAArB,CAHvB,QAGQG,MAHR,mBAKMA,MAAM,CAACf,IALb,sCAM2Ce,MAAM,CAACf,IANlD,CAMYI,WANZ,cAMYA,WANZ,CAMyBC,QANzB,cAMyBA,QANzB,CAMmCC,GANnC,cAMmCA,GANnC,MAQO,CAACF,WAAD,EAAgB,CAACC,QARxB,+BASY,IAAIE,CAAAA,KAAJ,CAAU,0CAAV,CATZ,QAYIN,OAAO,CAAC,CACNO,EAAE,CAAEF,GADE,CAENG,IAAI,CAAEL,WAFA,CAGNM,MAAM,CAAEL,QAHF,CAAD,CAAP,CAZJ,sDA1BmE,mDA6CpE,mBACA,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAACL,IAAI,CAAJA,IAAD,CAAOW,gBAAgB,CAAhBA,gBAAP,CAA7B,UACEZ,KAAK,CAACiB,QADR,EADA,CAMA","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { auth, firebase } from \"../services/firebase\";\r\n\r\ntype User = {\r\n  id: string;\r\n  name: string;\r\n  avatar: string;\r\n}\r\n\r\ntype AuthContextType = {\r\n  user: User | undefined;\r\n  signInWithGoogle: () => Promise<void>;\r\n}\r\n\r\ntype AuthContextProviderProps = {\r\n\tchildren: ReactNode;\r\n} \r\n\r\nexport const AuthContext = createContext({} as AuthContextType);\r\n\r\nexport function AuthContextProvider(props: AuthContextProviderProps) {\r\n  const [user, setUser] =useState<User>();\r\n\r\n  useEffect(()=>{\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if(user){\r\n        const { displayName, photoURL, uid } =user;\r\n\r\n        if(!displayName || !photoURL){\r\n          throw new Error('Missing information frmo Google Account.');\r\n        }\r\n\r\n        setUser({\r\n          id: uid,\r\n          name: displayName,\r\n          avatar: photoURL\r\n        })\r\n\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n  },[])\r\n\r\n  async function signInWithGoogle(){\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    const result = await auth.signInWithPopup(provider); \r\n\r\n    if (result.user){\r\n      const { displayName, photoURL, uid } = result.user;\r\n\r\n      if(!displayName || !photoURL){\r\n        throw new Error('Missing information frmo Google Account.');\r\n      }\r\n\r\n      setUser({\r\n        id: uid,\r\n        name: displayName,\r\n        avatar: photoURL\r\n      })\r\n    }\r\n  }\r\n\treturn (\r\n\t<AuthContext.Provider value={{user, signInWithGoogle}}>\r\n\t\t{props.children}\r\n\t</AuthContext.Provider>\r\n\r\n\t);\r\n}"]},"metadata":{},"sourceType":"module"}